export const API_ERRORS = {
  CUSTOMER_NOT_FOUND: (id: string) => `Customer with id '${id}' wasn't found`,
  EMPTY_TOKEN: 'Not authorized',
  INVALID_TOKEN: 'Invalid access token',
  EXPIRED_TOKEN: 'Access token expired',
  PRODUCT_NOT_FOUND: (id: string) => `Product with id '${id}' wasn't found`,
  CUSTOMER_BAD_REQUEST: 'Incorrect request body',
  PRODUCT_BAD_REQUEST: 'Incorrect request body',
  CUSTOMER_EMAIL_ALREADY_EXIST: (email: string) => `Customer with email '${email}' already exists`,
  ORDER_NOT_FOUND: (id: string) => `Order with id '${id}' wasn't found`,
  ORDER_BAD_REQUEST: 'Incorrect request body',
  ORDER_MISSING_CUSTOMER: 'Missing customer',
  COMMENT_NOT_FOUND: 'Comment was not found',
  PRODUCT_IN_ORDER: 'Not allowed to delete product, assigned to the order',
  CUSTOMER_IN_ORDER: 'Not allowed to delete customer, assigned to the order',
  ORDER_WITHOUT_CUSTOMER: 'Missing customer',
  PRODUCT_NAME_ALREADY_EXISTS: (name: string) => `Product with name '${name}' already exists`,
  MANAGER_NOT_FOUND: (id: string) => `Manager with id '${id}' wasn't found`,
  PRODUCT_IS_NOT_REQUESTED: (id: string) => `Product with Id '${id}' is not requested`,
  ORDER_STATUS_INVALID: 'Invalid order status',
} as const;

export const VALIDATION_ERROR_MESSAGES = {
  ['Customer Name']: `Customer's name should contain only 1-40 alphabetical characters and one space between`,
  ['City']: `City's name should contain only 1-20 alphabetical characters and one space between`,
  ['Address']: `Address should contain only 1-20 alphanumerical characters and one space between`,
  ['Street']: `Street should contain only 1-40 alphanumerical characters and one space between`,
  ['House']: 'House number should be in range 1-999',
  ['Flat']: 'Flat number should be in range 1-9999',
  ['Email']: 'Invalid Email Address',
  ['Phone']: 'Mobile Number should be at least 10 characters (max 20) and start with a +',
  ['Notes']: 'Notes should be in range 0-250 and without < or > symbols',
  ['Comments']: 'Comment should be in range 1-250 and without < or > symbols',
  ['Product Name']: "Products's name should contain only 3-40 alphanumerical characters and one space between",
  ['Amount']: 'Amount should be in range 0-999',
  ['Price']: 'Price should be in range 1-99999',
} as const;
